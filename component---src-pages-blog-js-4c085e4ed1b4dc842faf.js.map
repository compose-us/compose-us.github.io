{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","webpack:///./src/pages/blog.js"],"names":["props","ref","children","classes","className","focusVisibleClassName","other","ButtonBase","root","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","name","Content","data","Grid","container","spacing","map","item","key","xs","component","href","Card","CardContent","Typography","variant","dangerouslySetInnerHTML","__html","color","paragraph","replace","Categories","selected","onSelected","Container","justify","Chip","label","onClick","cat","query","withStyles","padding","breakpoints","down","header","paddingTop","paddingBottom","categories","marginBottom","alignItems","styles","React","useState","setSelected","nodes","content","filteredContent","filter","title","length","foo"],"mappings":"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","file":"component---src-pages-blog-js-4c085e4ed1b4dc842faf.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration[\"short\"]\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport withStyles from '@material-ui/styles/withStyles'\nimport theme from '../lib/theme'\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo/seo'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Chip from '@material-ui/core/Chip'\nimport SectionHeader from '../components/sections-header/section-header'\n\nconst Content = ({ data }) => {\n  return (\n    <Grid container spacing={2}>\n      {data.map(item => (\n        <Grid key={item['slug']} item xs={12}>\n          <CardActionArea\n            component=\"a\"\n            href={`/blog/${item['date']}/${item['slug']}`}\n          >\n            <Card>\n              <CardContent>\n                <Typography\n                  component=\"h2\"\n                  variant=\"h5\"\n                  dangerouslySetInnerHTML={{ __html: item['title'] }}\n                />\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  {item['date']}\n                </Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  paragraph\n                  dangerouslySetInnerHTML={{\n                    __html: item['excerpt'].replace(\n                      /<a class=\"more-link\".*/,\n                      ' ...'\n                    ),\n                  }}\n                />\n                <Typography variant=\"subtitle1\" color=\"primary\">\n                  Weiterlesen...\n                </Typography>\n              </CardContent>\n            </Card>\n          </CardActionArea>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nconst Categories = ({ data, selected, onSelected, classes }) => {\n  const clickHandler = cat => () => {\n    onSelected(cat !== selected ? cat : '')\n  }\n  return (\n    <Container className={classes}>\n      <Grid container justify={'center'} spacing={2}>\n        {data.map(item => (\n          <Grid key={item['slug']} item>\n            <Chip\n              label={item['name']}\n              color={selected === item['slug'] ? 'primary' : ''}\n              onClick={clickHandler(item['slug'])}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <br />\n    </Container>\n  )\n}\n\nconst styles = theme => ({\n  root: {\n    padding: '8rem',\n    [theme.breakpoints.down('sm')]: {\n      padding: '3rem',\n    },\n  },\n  header: {\n    paddingTop: '3rem',\n    paddingBottom: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingBottom: '2rem',\n    },\n  },\n  categories: {\n    marginBottom: '18px',\n    display: 'flex',\n    alignItems: 'bottom',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n})\n\nconst Blog = ({ classes, data }) => {\n  const [selected, setSelected] = React.useState('')\n\n  const categories = data.categories.nodes\n  const content = data.content.nodes\n  let filteredContent = content\n\n  if (selected !== '') {\n    filteredContent = content.filter(\n      item => item.categories[0]['slug'] === selected\n    )\n  }\n  const filterHandler = foo => {\n    setSelected(foo)\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Container className={classes.root}>\n        <div className={classes.header}>\n          <SectionHeader title=\"Blog\" />\n        </div>\n        {categories.length > 1 && (\n          <Categories\n            data={categories}\n            selected={selected}\n            onSelected={filterHandler}\n            classes={classes.categories}\n          />\n        )}\n        <Content data={filteredContent} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    categories: allWordpressCategory {\n      nodes {\n        name\n        slug\n      }\n    }\n    content: allWordpressPost {\n      nodes {\n        id\n        date(formatString: \"MM/DD/YYYY\")\n        title\n        slug\n        author\n        excerpt\n        categories {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n\nBlog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.object,\n}\n\nexport default withStyles(styles(theme))(Blog)\n"],"sourceRoot":""}