{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","webpack:///./src/pages/blog.js","webpack:///./src/lib/trim-wp-excerpt.js"],"names":["props","ref","children","classes","className","focusVisibleClassName","other","ButtonBase","root","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","name","styles","padding","breakpoints","down","categories","marginBottom","alignItems","header","paddingBottom","content","spacing","Content","withStyles","data","Grid","container","map","item","key","xs","component","href","Card","CardContent","Typography","variant","dangerouslySetInnerHTML","__html","noWrap","color","paragraph","input","replace","Categories","selected","onSelected","Container","justify","Chip","label","onClick","cat","query","React","useState","setSelected","nodes","filteredContent","filter","title","length","foo"],"mappings":"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","file":"component---src-pages-blog-js-58a5687b9e4ecb1e300d.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration[\"short\"]\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport withStyles from '@material-ui/styles/withStyles'\nimport theme from '../lib/theme'\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo/seo'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Chip from '@material-ui/core/Chip'\nimport SectionHeader from '../components/sections-header/section-header'\nimport { TrimWpExcerpt } from '../lib/trim-wp-excerpt'\n\nconst styles = theme => ({\n  root: {\n    // border: 'thin solid red',\n    padding: '8rem',\n    [theme.breakpoints.down('sm')]: {\n      padding: '0',\n    },\n  },\n  categories: {\n    marginBottom: '18px',\n    display: 'flex',\n    alignItems: 'bottom',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  header: {\n    padding: '3rem 20px 1rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingBottom: '2rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'left',\n    },\n  },\n  content: {\n    padding: theme.spacing(0),\n  },\n})\n\nconst Content = withStyles(styles(theme))(({ classes, data }) => {\n  return (\n    <Grid container spacing={0} className={classes.content}>\n      {data.map(item => (\n        <Grid key={item['slug']} item xs={12}>\n          <CardActionArea\n            component=\"a\"\n            href={`/blog/${item['date']}/${item['slug']}`}\n          >\n            <Card>\n              <CardContent>\n                <Typography\n                  component=\"h2\"\n                  variant=\"h5\"\n                  dangerouslySetInnerHTML={{ __html: item['title'] }}\n                />\n                <Typography\n                  noWrap={true}\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                >\n                  {item['date']}\n                </Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  paragraph\n                  dangerouslySetInnerHTML={{\n                    __html: TrimWpExcerpt(item['excerpt']),\n                  }}\n                />\n                <Typography noWrap={true} variant=\"subtitle1\" color=\"primary\">\n                  Weiterlesen...\n                </Typography>\n              </CardContent>\n            </Card>\n          </CardActionArea>\n        </Grid>\n      ))}\n    </Grid>\n  )\n})\n\nconst Categories = withStyles(styles(theme))(\n  ({ classes, data, selected, onSelected }) => {\n    const clickHandler = cat => () => {\n      onSelected(cat !== selected ? cat : '')\n    }\n\n    return (\n      <Container className={classes.categories}>\n        <Grid container justify={'center'} spacing={2}>\n          {data.map(item => (\n            <Grid key={item['slug']} item>\n              <Chip\n                label={item['name']}\n                color={selected === item['slug'] ? 'primary' : ''}\n                onClick={clickHandler(item['slug'])}\n              />\n            </Grid>\n          ))}\n        </Grid>\n        <br />\n      </Container>\n    )\n  }\n)\n\nconst Blog = ({ classes, data }) => {\n  const [selected, setSelected] = React.useState('')\n\n  const categories = data.categories.nodes\n  const content = data.content.nodes\n  let filteredContent = content\n\n  if (selected !== '') {\n    filteredContent = content.filter(\n      item => item.categories[0]['slug'] === selected\n    )\n  }\n\n  const filterHandler = foo => {\n    setSelected(foo)\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Container className={classes.root}>\n        <div className={classes.header}>\n          <SectionHeader title=\"Blog\" />\n        </div>\n        {categories.length > 1 && (\n          <Categories\n            data={categories}\n            selected={selected}\n            onSelected={filterHandler}\n            classes={classes}\n          />\n        )}\n        <Content data={filteredContent} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    categories: allWordpressCategory {\n      nodes {\n        name\n        slug\n      }\n    }\n    content: allWordpressPost {\n      nodes {\n        id\n        date(formatString: \"MM/DD/YYYY\")\n        title\n        slug\n        author\n        excerpt\n        categories {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n\nBlog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.object,\n}\n\nexport default withStyles(styles(theme))(Blog)\n","export const TrimWpExcerpt = input => {\n  return input.replace(/<a class=\"more-link\".*/, ' ...')\n}\n"],"sourceRoot":""}